/*
 * This file is generated by jOOQ.
*/
package com.jooq.data.tables.records;


import com.jooq.data.tables.Locations;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LocationsRecord extends UpdatableRecordImpl<LocationsRecord> implements Record3<Long, String, Long[]> {

    private static final long serialVersionUID = 1571760078;

    /**
     * Setter for <code>public.locations.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.locations.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.locations.location</code>.
     */
    public void setLocation(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.locations.location</code>.
     */
    public String getLocation() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.locations.ulist</code>.
     */
    public void setUlist(Long... value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.locations.ulist</code>.
     */
    public Long[] getUlist() {
        return (Long[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, Long[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, Long[]> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Locations.LOCATIONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Locations.LOCATIONS.LOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long[]> field3() {
        return Locations.LOCATIONS.ULIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long[] value3() {
        return getUlist();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value2(String value) {
        setLocation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord value3(Long... value) {
        setUlist(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationsRecord values(Long value1, String value2, Long[] value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LocationsRecord
     */
    public LocationsRecord() {
        super(Locations.LOCATIONS);
    }

    /**
     * Create a detached, initialised LocationsRecord
     */
    public LocationsRecord(Long id, String location, Long[] ulist) {
        super(Locations.LOCATIONS);

        set(0, id);
        set(1, location);
        set(2, ulist);
    }
}
